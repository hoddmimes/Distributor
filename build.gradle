
allprojects {
	    group = "com.hoddmimes"
	    version = 1.0


}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8



    sourceSets {
       main {
          java {
            srcDir 'java/main'
          }
       }
       test {
         java {
            srcDir 'java/test'
        }
      }
   }

   repositories {
      mavenCentral()
   }

   dependencies {

       implementation  group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.1'
       implementation  group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.1'
       testCompile group: 'junit', name: 'junit', version: '4.12'
   }
}


project(':msggen') {

    configurations.implementation.setCanBeResolved(true)


    task buildGenerateJar (type: Jar) {
        baseName = 'messageCompiler';
        version = '1.0'
        destinationDir = file("../")

        from {
            configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
        }
        from('build/classes/java/main') {
            include '**/*.class'
        }

        from('xsl') {
            include '*.xsl'
        }

        doLast {
            println('MessageCompiler JAR successfully built!')
        }
    }

    build.finalizedBy(buildGenerateJar)

    dependencies {
        implementation  group: 'xalan', name: 'xalan', version: '2.7.2'
    }
}

project(':utilities') {
    dependencies {
    }
}

project(':pubsub') {


    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    javadoc {
        source = sourceSets.main.allJava
        title   'Distributor V' + version
        destinationDir = file('../javadoc');
        exclude 'com/hoddmimes/distributor/samples/**'
        exclude 'com/hoddmimes/distributor/console/**'
        exclude 'com/hoddmimes/distributor/auxillaries/**'
        exclude 'com/hoddmimes/distributor/bdxgyw/**'
        exclude 'com/hoddmimes/distributor/tcpip/**'
    }

    sourceSets {
        build {
            java.srcDir file('java/main')

        }
    }


    task deleteGeneratedFiles(type: Delete) {
        delete fileTree('java/main/com/hoddmimes/distributor/generated/messages') {
            include '*.java'
        }
    }

    task buildJar( type: Jar ) {
        Date date = new Date()
        String dateTime = date.format("yy-MM-dd");

        archivesBaseName = 'distributor';
        version =  version + "-" + dateTime;
        destinationDir = file("../")
        from('./build/classes/java/main/') {
            include '**/*'
        }
        from('./') {
            include '*log4j.xml'
        }
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
        doLast {
            println('Distributor JAR successfully built!')
        }
    }

    task(generateMessageClasses, type: JavaExec) {
        main = 'com.hoddmimes.transform.MessageCompiler'
        classpath = files('../messageCompiler-1.0.jar')
        args "-xml","./xml/DistributorMessagesFileSet.xml"
    }

    clean.dependsOn(deleteGeneratedFiles)
    compileJava.dependsOn('generateMessageClasses')
    build.finalizedBy(buildJar)

    dependencies {
        implementation group: 'com.jcraft', name: 'jzlib', version: '1.1.3'
        compile project(':msggen')
    }
}










